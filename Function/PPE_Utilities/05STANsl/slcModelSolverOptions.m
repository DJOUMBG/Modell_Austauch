function slcModelSolverOptions(hSystem)
% SLCMODELSOLVEROPTIONS set standard solver options for 10Hz discrete and
% standard options.
%
% Syntax:
%   slcModelSolverOptions(hSystem)
%
% Inputs:
%   hSystem - handle of system to set solver settings and options
%
% Outputs:
%
% Example: 
%   slcModelSolverOptions(hSystem)

%
% Author: Rainer Frey, TP/EAD, Daimler AG
%  Phone: +49-711-17-34246
% MailTo: rainer.r.frey@daimler.com
%   Date: 2014-11-13

% Simulink solver
cSolver = {'SolverType','Fixed-step',...
           'SolverName','ode1',...
           'Solver','ode1',...
           'SolverMode','SingleTasking',...
           'StopTime','10',...
           'FixedStep','0.005'};
set_param(hSystem,cSolver{:});
                  
% Simulink model options
cOptions = {'BufferReuse','off',...
           'BlockReduction','off',...
           'ExpressionFolding','off',...
           'LocalBlockOutputs','off',...
           'BlockReductionOpt','off',...
           'OptimizeBlockIOStorage','off',...
           'BooleanDataType','off',...
           'SortedOrder','on',...
           'SimParseCustomCode','off',...
           'MultiTaskRateTransMsg','warning',...
           'InitFltsAndDblsToZero','on',...
           'SaveWithParameterizedLinksMsg','none',...
           'SignalLogging','off',...
           'SaveOutput','off',...
           'LibraryLinkDisplay','all'};
set_param(hSystem,cOptions{:});

% model browser settings
if verLessThanMATLAB('9.13')
    % model browser settings
    cBrowser = {'ModelBrowserVisibility','on',...
        'BrowserShowLibraryLinks','on',...
        'BrowserLookUnderMasks','on',...
        'ModelBrowserWidth',350};
    set_param(hSystem,cBrowser{:});
end

% system callback functions
cCbFcn  = {'InitFcn','tic;',...
           'StartFcn','tempSimData.inittime = toc;tic;',...
           'StopFcn',['tempSimData.time = toc;' ...
                      'disp([''Simulation needed '' num2str(tempSimData.time,''%4.2f'') ''s for '' get_param(bdroot(gcs),''StopTime'') ''s simulated time.'']);' ...
                      'disp([''Simulation performance was realtime = '' num2str(tempSimData.time/str2double(get_param(bdroot(gcs),''StopTime'')),''%4.2f'') '' * simulated time'']);' ...
                      'disp([''and additional initialization of '' num2str(tempSimData.inittime,''%4.2f'') ''s.'']);' ...
                      'clear tempSimData']};
set_param(hSystem,cCbFcn{:});
return
                  