function vOut = versionAliasSimulink(varargin)
% VERSIONALIASSIMULINK get a Simulink version to release correlation (or
% vice versa).
%
% Syntax:
%   varargout = versionAliasSimulink
%   varargout = versionAliasSimulink(varargin)
%
% Inputs:
%   varargin - 1: [optional] string with version or release info
%
% Outputs:
%   varargout
%      case 1 (no input): cell(nx2) with Simulink version aliases 6.3 to now
%                           cell{n,1} - Simulink release string, e.g. R2016a
%                           cell{n,2} - Simulink version string, e.g. 9.0
%      case 2 (e.g. 'R2009b'): 1 output arguments 
%                           1: sVersion - Simulink version string, e.g. 7.9
%      case 3 (e.g. '7.10'): 1 output arguments 
%                           1: sRelease - Simulink release string, e.g. R2010a
%
% Example: 
%   sVersion = versionAliasSimulink('R2010b')
%   sVersion = versionAliasSimulink('7.6')
%
% See also: versionAliasMatlab 
%
% Author: Rainer Frey, TP/EAD, Daimler AG
%  Phone: +49-711-17-34246
% MailTo: rainer.r.frey@daimler.com
%   Date: 2018-04-03

% check input
if isnumeric(varargin{1}) && unique(size(varargin{1})) == 1
    varargin{1} = num2str(varargin{1});
end

% version alias definition
cVersion = {...
    'R2005b'    '6.3';... % R14 SP3
    'R2006a'    '6.4';...
    'R2006b'    '6.5';...
    'R2007a'    '6.6';...
    'R2007b'    '7.0';...
    'R2008a'    '7.1';...
    'R2008b'    '7.2';...
    'R2009a'    '7.3';...
    'R2009b'    '7.4';...
    'R2010a'    '7.5';...
    'R2010b'    '7.6';... 'R2010bSP1' '7.11.1' {'w32','w64'};...
    'R2011a'    '7.7';...
    'R2011b'    '7.8';...
    'R2012a'    '7.9';...
    'R2012b'    '8.0';...
    'R2013a'    '8.1';...
    'R2013b'    '8.2';...
    'R2014a'    '8.3';...
    'R2014b'    '8.4';...
    'R2015a'    '8.5';...
    'R2015b'    '8.6';...
    'R2016a'    '8.7';...
    'R2016b'    '8.8';...
    'R2017a'    '8.9';...
    'R2017b'    '9.0';...
    'R2018a'    '9.1';...
    'R2018b'    '9.2';...
    'R2019a'    '9.3';...
    'R2019b'    '9.4';...
    'R2020a'    '10.1';...
    'R2020b'    '10.2';...
    'R2021a'    '10.3';...
    'R2021b'    '10.4';...
    'R2022a'    '10.5';...
    'R2022b'    '10.6';...
    'R2023a'    '10.7';...
    'R2023b'    '23.2'};
    
% create output
vOut = '';
if nargin == 0
    % pass complete cell
    vOut = cVersion;
elseif nargin > 0
    sPattern = regexpi(varargin{1},'R\d{4}\w','match','once');
    if ~isempty(sPattern)
        % request is a release string
        cVersionSearch = regexpi(cVersion(:,1),['^' sPattern],'once');
        bVersion = ~cellfun(@isempty,cVersionSearch);
        if any(bVersion)
            vOut = cVersion{bVersion,2};
        end
    else
        % request is a MATLAB version string
        sPattern = regexpi(varargin{1},'^\d+\.\d+','match','once');
        if ~isempty(sPattern)
            bVersion = strcmp(sPattern,cVersion(:,2));
            if any(bVersion)
                vOut = cVersion{bVersion,1};
            end
        end
    end
end
return
